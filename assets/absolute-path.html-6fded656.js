import{_ as s}from"./plugin-vue_export-helper-c27b6911.js";import{o as n,c as a,f as e}from"./app-82905a8b.js";const t={},p=e(`<h1 id="타입스크립트-절대-경로-설정하기" tabindex="-1"><a class="header-anchor" href="#타입스크립트-절대-경로-설정하기" aria-hidden="true">#</a> 타입스크립트 절대 경로 설정하기</h1><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Test <span class="token keyword">from</span> <span class="token string">&quot;../../test.ts&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>../../ 이런식으로 상대경로로 import 해오는 것을 절대경로로 바꾸는 방법에 대해 설명하겠습니다.</p><p>먼저 module-alias 모듈을 설치해주세요.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">yarn</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> module-alias
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>package.json에 다음 문구를 추가해주세요.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;_moduleAliases&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./src&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>src 라는 이름이 절대 경로가 되고, ./src 가 경로가 됩니다.</p><p>&quot;@test&quot;: &quot;./test&quot;</p><p>로 하면 @test 라는 이름이 절대 경로가 되고, ./test 가 경로가 됩니다.</p><p>설정이 되었다면, 이제 다음과 같이 사용이 가능합니다.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">import</span> Test <span class="token keyword">from</span> <span class="token string">&quot;src/test&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>타입스크립트 빌드를 위해서 다음과 같이 해주세요.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// root.ts (app.ts)</span>
<span class="token keyword">import</span> <span class="token string">&quot;module-alias/register&quot;</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div></div></div><p>javascript는 절대 경로를 이해하지 못하므로 <code>import &quot;module-alias/register&quot;;</code> 를 넣어주어야 합니다.</p><p>배포를 할때는 다음과 같이 빌드결과물이 있는 폴더명으로 바꾸어주어야 합니다.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;_moduleAliases&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;src&quot;</span><span class="token operator">:</span> <span class="token string">&quot;./dist&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Elastic Beanstalk에 배포를 할때는</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// package.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;scripts&quot;</span><span class="token operator">:</span> <span class="token punctuation">{</span>
    <span class="token property">&quot;start&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node dist/app.js&quot;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>EB는 npm run start 가 디폴트 실행 명령으로 되어있기 때문에 이런식으로 해주어야합니다.</p>`,20),o=[p];function i(l,c){return n(),a("div",null,o)}const u=s(t,[["render",i],["__file","absolute-path.html.vue"]]);export{u as default};
