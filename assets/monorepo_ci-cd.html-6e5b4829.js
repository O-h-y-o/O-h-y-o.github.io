import{_ as t}from"./plugin-vue_export-helper-c27b6911.js";import{r as p,o as e,c as o,a as n,b as c,e as i,f as s}from"./app-a8d13ae8.js";const u={},l=s('<h1 id="모노레포-github-ci-cd" tabindex="-1"><a class="header-anchor" href="#모노레포-github-ci-cd" aria-hidden="true">#</a> 모노레포 &amp; Github CI/CD</h1><p>멀티레포에서는 project repo가 각각 있기때문에 관리와 유지보수에 대한 비용이 늘어나게 됩니다.</p><p>모노레포에서는 하나의 레포에 프로젝트들이 있기때문에 통합적인 관리가 가능합니다.</p><p>멀티레포는 브랜치가 꼬이거나 하는 일이 적지만, 모노레포에서는 브랜치끼리 꼬이거나 ci/cd의 과정에서 몇 가지 문제가 발생할 수가 있습니다. (조심하지않으면..)</p><p>Root<br> ╚ project1<br> ╚ project2<br> ╚ project3</p><h2 id="자동-github-ci-cd" tabindex="-1"><a class="header-anchor" href="#자동-github-ci-cd" aria-hidden="true">#</a> 자동 Github CI/CD</h2><h2 id="수동-github-ci-cd" tabindex="-1"><a class="header-anchor" href="#수동-github-ci-cd" aria-hidden="true">#</a> 수동 Github CI/CD</h2><h3 id="window" tabindex="-1"><a class="header-anchor" href="#window" aria-hidden="true">#</a> Window</h3><p>다음 사이트에서 github cli를 설치해주세요.</p>',9),r={href:"https://cli.github.com",target:"_blank"},k={href:"https://cli.github.com",target:"_blank",rel:"noopener noreferrer"},d=s(`<p>다음으로 깃허브 로그인을 해주세요.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ gh auth login
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>.github/workflows에 다음과 비슷하게 작성해주세요. 상황에 따라 다르게 적어주시면 됩니다.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">name</span><span class="token punctuation">:</span> deploy
<span class="token key atrule">on</span><span class="token punctuation">:</span>
  <span class="token key atrule">workflow_dispatch</span><span class="token punctuation">:</span>
    <span class="token key atrule">inputs</span><span class="token punctuation">:</span>
      <span class="token key atrule">target</span><span class="token punctuation">:</span>
        <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">type</span><span class="token punctuation">:</span> string
      <span class="token key atrule">bucketName</span><span class="token punctuation">:</span>
        <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">type</span><span class="token punctuation">:</span> string
      <span class="token key atrule">branch</span><span class="token punctuation">:</span>
        <span class="token key atrule">required</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
        <span class="token key atrule">type</span><span class="token punctuation">:</span> string

<span class="token key atrule">jobs</span><span class="token punctuation">:</span>
  <span class="token key atrule">build</span><span class="token punctuation">:</span>
    <span class="token key atrule">runs-on</span><span class="token punctuation">:</span> ubuntu<span class="token punctuation">-</span>latest

    <span class="token key atrule">defaults</span><span class="token punctuation">:</span>
      <span class="token key atrule">run</span><span class="token punctuation">:</span>
        <span class="token key atrule">shell</span><span class="token punctuation">:</span> bash

    <span class="token key atrule">steps</span><span class="token punctuation">:</span>
      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Checkout
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/checkout@v3

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install Node.js
        <span class="token key atrule">uses</span><span class="token punctuation">:</span> actions/setup<span class="token punctuation">-</span>node@v3
        <span class="token key atrule">with</span><span class="token punctuation">:</span>
          <span class="token key atrule">node-version</span><span class="token punctuation">:</span> <span class="token number">20</span>

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install dependencies
        <span class="token key atrule">run</span><span class="token punctuation">:</span> yarn global add @quasar/cli &amp; yarn install

      <span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Create .env &amp; Build &amp; Deploy
        <span class="token key atrule">run</span><span class="token punctuation">:</span> <span class="token punctuation">|</span><span class="token scalar string">
          if [[ \${{ github.event.inputs.branch }} == &#39;dev&#39; ]]; then
            echo &quot;VUE_APP_API=\${{ secrets.DEV_API }}&quot; &gt;&gt; \${{github.event.inputs.target}}/.env
          elif [[ \${{ github.event.inputs.branch }} == &#39;stage&#39; ]]; then
            echo &quot;VUE_APP_API=\${{ secrets.STAGE_API }}&quot; &gt;&gt; \${{github.event.inputs.target}}/.env
          elif [[ \${{ github.event.inputs.branch }} == &#39;main&#39; ]]; then
            echo &quot;VUE_APP_API=\${{ secrets.PROD_API }}&quot; &gt;&gt; \${{github.event.inputs.target}}/.env
          fi
          cat \${{github.event.inputs.target}}/.env</span>

          if <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project1&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
            <span class="token comment"># build_process</span>
          elif <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project2&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
            <span class="token comment"># build_process</span>
          elif <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project3&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
            <span class="token comment"># build_process</span>
          fi

          aws s3 sync $<span class="token punctuation">{</span><span class="token punctuation">{</span>github.event.inputs.target<span class="token punctuation">}</span><span class="token punctuation">}</span>/dist/pwa s3<span class="token punctuation">:</span>//$<span class="token punctuation">{</span><span class="token punctuation">{</span>github.event.inputs.bucketName<span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>acl public<span class="token punctuation">-</span>read <span class="token punctuation">-</span><span class="token punctuation">-</span>delete

          if <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.branch <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;dev&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then

            if <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project1&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
              aws cloudfront create<span class="token punctuation">-</span>invalidation <span class="token punctuation">-</span><span class="token punctuation">-</span>distribution<span class="token punctuation">-</span>id $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PROJECT1_DEV_DISTRIBUTION <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>paths &quot;/<span class="token important">*&quot;</span>
            elif <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project2&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
              aws cloudfront create<span class="token punctuation">-</span>invalidation <span class="token punctuation">-</span><span class="token punctuation">-</span>distribution<span class="token punctuation">-</span>id $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PROJECT2_DEV_DISTRIBUTION <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>paths &quot;/<span class="token important">*&quot;</span>
            elif <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project3&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
              aws cloudfront create<span class="token punctuation">-</span>invalidation <span class="token punctuation">-</span><span class="token punctuation">-</span>distribution<span class="token punctuation">-</span>id $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PROJECT3_DEV_DISTRIBUTION <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>paths &quot;/<span class="token important">*&quot;</span>
            fi

          elif <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.branch <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;stage&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then

            if <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project1&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
              aws cloudfront create<span class="token punctuation">-</span>invalidation <span class="token punctuation">-</span><span class="token punctuation">-</span>distribution<span class="token punctuation">-</span>id $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PROJECT1_STAGE_DISTRIBUTION <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>paths &quot;/<span class="token important">*&quot;</span>
            elif <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project2&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
              aws cloudfront create<span class="token punctuation">-</span>invalidation <span class="token punctuation">-</span><span class="token punctuation">-</span>distribution<span class="token punctuation">-</span>id $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PROJECT2_STAGE_DISTRIBUTION <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>paths &quot;/<span class="token important">*&quot;</span>
            elif <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project3&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
              aws cloudfront create<span class="token punctuation">-</span>invalidation <span class="token punctuation">-</span><span class="token punctuation">-</span>distribution<span class="token punctuation">-</span>id $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PROJECT3_STAGE_DISTRIBUTION <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>paths &quot;/<span class="token important">*&quot;</span>
            fi

          elif <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.branch <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;main&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then

            if <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project1&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
              aws cloudfront create<span class="token punctuation">-</span>invalidation <span class="token punctuation">-</span><span class="token punctuation">-</span>distribution<span class="token punctuation">-</span>id $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PROJECT1_PROD_DISTRIBUTION <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>paths &quot;/<span class="token important">*&quot;</span>
            elif <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project2&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
              aws cloudfront create<span class="token punctuation">-</span>invalidation <span class="token punctuation">-</span><span class="token punctuation">-</span>distribution<span class="token punctuation">-</span>id $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PROJECT2_PROD_DISTRIBUTION <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>paths &quot;/<span class="token important">*&quot;</span>
            elif <span class="token punctuation">[</span><span class="token punctuation">[</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> github.event.inputs.target <span class="token punctuation">}</span><span class="token punctuation">}</span> == &#39;project3&#39; <span class="token punctuation">]</span><span class="token punctuation">]</span>; then
              aws cloudfront create<span class="token punctuation">-</span>invalidation <span class="token punctuation">-</span><span class="token punctuation">-</span>distribution<span class="token punctuation">-</span>id $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.PROJECT3_DISTRIBUTION <span class="token punctuation">}</span><span class="token punctuation">}</span> <span class="token punctuation">-</span><span class="token punctuation">-</span>paths &quot;/<span class="token important">*&quot;</span>
            fi

          fi

        <span class="token key atrule">env</span><span class="token punctuation">:</span>
          <span class="token key atrule">AWS_ACCESS_KEY_ID</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.AWS_ACCESS_KEY_ID <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">AWS_SECRET_ACCESS_KEY</span><span class="token punctuation">:</span> $<span class="token punctuation">{</span><span class="token punctuation">{</span> secrets.AWS_SECRET_ACCESS_KEY <span class="token punctuation">}</span><span class="token punctuation">}</span>
          <span class="token key atrule">AWS_DEFAULT_REGION</span><span class="token punctuation">:</span> ap<span class="token punctuation">-</span>northeast<span class="token punctuation">-</span><span class="token number">2</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>저는 branch와 배포할 프로젝트인 target을 값으로 받겠습니다.</p><p><code>inquirer</code> 라이브러리를 통하여 값을 받아주겠습니다.<br> 프로젝트 루트에서 <code>inquirer</code> 라이브러리를 설치해주세요.<br> 타입스크립트의 경우 <code>@types/inquirer</code>를 같이 설치해주세요.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">yarn</span> <span class="token parameter variable">-W</span> <span class="token function">add</span> <span class="token parameter variable">-D</span> inquirer @types/inquirer
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>그리고 프로젝트 루트에 <code>deploy.ts</code>를 만들어주시고 다음 코드와 비슷하게 작성해주세요.</p><div class="language-javascript line-numbers-mode" data-ext="js"><pre class="language-javascript"><code><span class="token keyword">import</span> inquirer <span class="token keyword">from</span> <span class="token string">&quot;inquirer&quot;</span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token punctuation">{</span> exec <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;child_process&quot;</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">inquirerBranch</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> branch <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> inquirer<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;branch&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;배포를 진행할 브랜치를 선택해주세요.&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">choices</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;dev&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;stage&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;main&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> branch<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">const</span> <span class="token function-variable function">inquirerTarget</span> <span class="token operator">=</span> <span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> <span class="token punctuation">{</span> target <span class="token punctuation">}</span> <span class="token operator">=</span> <span class="token keyword">await</span> inquirer<span class="token punctuation">.</span><span class="token function">prompt</span><span class="token punctuation">(</span><span class="token punctuation">[</span>
    <span class="token punctuation">{</span>
      <span class="token literal-property property">type</span><span class="token operator">:</span> <span class="token string">&quot;list&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">name</span><span class="token operator">:</span> <span class="token string">&quot;target&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">message</span><span class="token operator">:</span> <span class="token string">&quot;배포를 진행할 프로젝트를 선택해주세요.&quot;</span><span class="token punctuation">,</span>
      <span class="token literal-property property">choices</span><span class="token operator">:</span> <span class="token punctuation">[</span><span class="token string">&quot;project1&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;project2&quot;</span><span class="token punctuation">,</span> <span class="token string">&quot;project3&quot;</span><span class="token punctuation">]</span><span class="token punctuation">,</span>
    <span class="token punctuation">}</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> target<span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token punctuation">(</span><span class="token keyword">async</span> <span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">try</span> <span class="token punctuation">{</span>
    <span class="token keyword">const</span> branch <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">inquirerBranch</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">const</span> target <span class="token operator">=</span> <span class="token keyword">await</span> <span class="token function">inquirerTarget</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
    <span class="token keyword">let</span> bucketName<span class="token punctuation">;</span>

    <span class="token keyword">if</span> <span class="token punctuation">(</span>branch <span class="token operator">===</span> <span class="token string">&quot;dev&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">&quot;project1&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucketName <span class="token operator">=</span> <span class="token string">&quot;dev_project1&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">&quot;project2&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucketName <span class="token operator">=</span> <span class="token string">&quot;dev_project2&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">&quot;project3&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucketName <span class="token operator">===</span> <span class="token string">&quot;dev_project3&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>branch <span class="token operator">===</span> <span class="token string">&quot;stage&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">&quot;project1&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucketName <span class="token operator">=</span> <span class="token string">&quot;stage_project1&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">&quot;project2&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucketName <span class="token operator">=</span> <span class="token string">&quot;stage_project2&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">&quot;project3&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucketName <span class="token operator">=</span> <span class="token string">&quot;stage_project3&quot;</span><span class="token punctuation">;</span>
        <span class="token keyword">return</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>branch <span class="token operator">===</span> <span class="token string">&quot;main&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
      <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">&quot;project1&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucketName <span class="token operator">=</span> <span class="token string">&quot;prod_project1&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">&quot;project2&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucketName <span class="token operator">=</span> <span class="token string">&quot;prod_project2&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>target <span class="token operator">===</span> <span class="token string">&quot;project3&quot;</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        bucketName <span class="token operator">===</span> <span class="token string">&quot;prod_project3&quot;</span><span class="token punctuation">;</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">}</span>

    <span class="token function">exec</span><span class="token punctuation">(</span>
      <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">gh workflow run deploy --ref </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>branch<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> -F target=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>target<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> -F bucketName=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>bucketName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string"> -F branch=</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>branch<span class="token interpolation-punctuation punctuation">}</span></span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">,</span>
      <span class="token punctuation">(</span><span class="token parameter">error</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
        <span class="token keyword">if</span> <span class="token punctuation">(</span>error<span class="token punctuation">)</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>error<span class="token punctuation">.</span>message<span class="token punctuation">)</span><span class="token punctuation">;</span>

          <span class="token keyword">return</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span> <span class="token keyword">else</span> <span class="token punctuation">{</span>
          console<span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>
            <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">
        /** DEPLOY INFO **/\\n
          deploy branch: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>branch<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n
          deploy project: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>target<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n
          deploy bucket name: </span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>bucketName<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">\\n
        /** The deployment will begin shortly. **/
        </span><span class="token template-punctuation string">\`</span></span>
          <span class="token punctuation">)</span><span class="token punctuation">;</span>
        <span class="token punctuation">}</span>
      <span class="token punctuation">}</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span>ex<span class="token punctuation">)</span> <span class="token punctuation">{</span>
    console<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>그리고 루트의 <code>package.json</code> 에 <code>type은 &quot;module&quot;</code>로 설정해주시고, scripts에 다음과 비슷하게 작성해주시면 됩니다.</p><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code>    <span class="token property">&quot;deploy&quot;</span><span class="token operator">:</span> <span class="token string">&quot;node ./deploy&quot;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>노드버전 18이하는 에러가 발생합니다. 18버전 이상이나 최신버전의 node.js를 설치해주세요!</p>`,12);function v(b,m){const a=p("ExternalLinkIcon");return e(),o("div",null,[l,n("p",null,[n("a",r,[n("a",k,[c("https://cli.github.com"),i(a)])])]),d])}const y=t(u,[["render",v],["__file","monorepo_ci-cd.html.vue"]]);export{y as default};
