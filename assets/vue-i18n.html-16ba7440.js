import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as s,f as a}from"./app-d91ef5bc.js";const t={},o=a(`<p>현 날짜 기준으로 프로젝트 생성시, vite, vue, pinia 기타 등등 세팅을 할때 모두 가장 최신버전으로 세팅을 해두었을때를 가정</p><ul><li>vue-i18n 사용시 개발서버에서는 변수 사용이 정상적으로 되는데 배포했을때 정상적으로 동작하지 않는 이슈</li></ul><div class="language-json line-numbers-mode" data-ext="json"><pre class="language-json"><code><span class="token comment">// en.json</span>
<span class="token punctuation">{</span>
  <span class="token property">&quot;word.person&quot;</span><span class="token operator">:</span> <span class="token string">&quot;{person} person&quot;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>template</span><span class="token punctuation">&gt;</span></span>
  {{ $t(&quot;word.person&quot;, { person: 1 }) }}
<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>template</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>해당 코드처럼 사용했을시 개발 서버에서는 정상적으로 <code>1 person</code> 이 출력이 된다.</p><p>하지만 배포할때에는 <code>{person} person</code> 이렇게 출력되는 현상이 있다.</p><p>다국어를 지원하고 변수까지 사용하는 사례가 별로 없어서 찾는데 애를 먹었지만, <code>vite.config</code> 혹은 <code>quasar.config</code> 에 <code>runtimeOnly: false</code> 이것을 추가해주면 된다는 것을 찾았다.</p><p>왜 runtimeOnly의 default 값이 true 인지는 정말 영 이해할 수 없지만 이것을 false 를 해줘야 배포를 했을때 정상적으로 변수가 잘 들어간다.</p>`,8),c=[o];function p(i,l){return e(),s("div",null,c)}const r=n(t,[["render",p],["__file","vue-i18n.html.vue"]]);export{r as default};
