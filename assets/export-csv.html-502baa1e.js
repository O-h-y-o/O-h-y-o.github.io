const n=JSON.parse(`{"key":"v-88f03830","path":"/ko/posts/vue3_quasar/export-csv.html","title":"Quasar 에서 엑셀 다운로드 하기","lang":"ko-KR","frontmatter":{"date":"2024-08-09T00:00:00.000Z","category":["Quasar","export csv"],"tag":["export csv","typescript"],"order":1,"description":"Quasar 에서 엑셀 다운로드 하기 코드 전체입니다. exportData로 엑셀 다운로드를 할 수 있습니다. 타입이 지저분하고 any가 많은데 어쩔수가 없습니다. // functions.ts const wrapCsvValue = ( val: string, formatFn?: (arg0: string, arg1: RowData | undefined) =&gt; string | undefined, row?: RowData ) =&gt; { let formatted = formatFn ? formatFn(val, row) : val; formatted = formatted === undefined || formatted === null ? \\"\\" : String(formatted); formatted = formatted.split('\\"').join('\\"\\"'); return \`\\"\${formatted}\\"\`; }; export const exportData = (columns: any, rows: any) =&gt; { const content = [ columns.map((col: { label: string }) =&gt; wrapCsvValue(col.label)), ] .concat( rows.map((row: { [x: string]: any }) =&gt; columns .map((col: any) =&gt; { const value = typeof col.field === \\"function\\" ? col.field(row) : row[col.field === void 0 ? col.name : col.field]; if (value instanceof Date || dayjs.isDayjs(value)) { return wrapCsvValue( dayjs(value).format(\\"YYYY.MM.DD HH:mm\\"), col.format, row ); } return wrapCsvValue(value, col.format, row); }) .join(\\",\\") ) ) .join(\\"\\\\r\\\\n\\"); const bom = \\"\\\\uFEFF\\"; const status = exportFile(\\"table-export.csv\\", bom + content, \\"text/csv\\"); if (status !== true) { commonNotify( { message: \\"Browser denied file download...\\", }, \\"negative\\" ); } };","head":[["meta",{"property":"og:url","content":"https://o-h-y-o.github.io/ko/posts/vue3_quasar/export-csv.html"}],["meta",{"property":"og:site_name","content":"Delicious Jelly"}],["meta",{"property":"og:title","content":"Quasar 에서 엑셀 다운로드 하기"}],["meta",{"property":"og:description","content":"Quasar 에서 엑셀 다운로드 하기 코드 전체입니다. exportData로 엑셀 다운로드를 할 수 있습니다. 타입이 지저분하고 any가 많은데 어쩔수가 없습니다. // functions.ts const wrapCsvValue = ( val: string, formatFn?: (arg0: string, arg1: RowData | undefined) =&gt; string | undefined, row?: RowData ) =&gt; { let formatted = formatFn ? formatFn(val, row) : val; formatted = formatted === undefined || formatted === null ? \\"\\" : String(formatted); formatted = formatted.split('\\"').join('\\"\\"'); return \`\\"\${formatted}\\"\`; }; export const exportData = (columns: any, rows: any) =&gt; { const content = [ columns.map((col: { label: string }) =&gt; wrapCsvValue(col.label)), ] .concat( rows.map((row: { [x: string]: any }) =&gt; columns .map((col: any) =&gt; { const value = typeof col.field === \\"function\\" ? col.field(row) : row[col.field === void 0 ? col.name : col.field]; if (value instanceof Date || dayjs.isDayjs(value)) { return wrapCsvValue( dayjs(value).format(\\"YYYY.MM.DD HH:mm\\"), col.format, row ); } return wrapCsvValue(value, col.format, row); }) .join(\\",\\") ) ) .join(\\"\\\\r\\\\n\\"); const bom = \\"\\\\uFEFF\\"; const status = exportFile(\\"table-export.csv\\", bom + content, \\"text/csv\\"); if (status !== true) { commonNotify( { message: \\"Browser denied file download...\\", }, \\"negative\\" ); } };"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-08-09T05:31:51.000Z"}],["meta",{"property":"article:author","content":"O-h-y-o"}],["meta",{"property":"article:tag","content":"export csv"}],["meta",{"property":"article:tag","content":"typescript"}],["meta",{"property":"article:published_time","content":"2024-08-09T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2024-08-09T05:31:51.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Quasar 에서 엑셀 다운로드 하기\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-08-09T00:00:00.000Z\\",\\"dateModified\\":\\"2024-08-09T05:31:51.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"O-h-y-o\\",\\"url\\":\\"https://github.com/O-h-y-o\\"}]}"]]},"headers":[],"git":{"createdTime":1723181511000,"updatedTime":1723181511000,"contributors":[{"name":"Ohyo","email":"khr157929@gmail.com","commits":1}]},"readingTime":{"minutes":0.47,"words":140},"filePathRelative":"ko/posts/vue3+quasar/export-csv.md","localizedDate":"2024년 8월 9일","excerpt":"<h1> Quasar 에서 엑셀 다운로드 하기</h1>\\n<p>코드 전체입니다.</p>\\n<p><code>exportData</code>로 엑셀 다운로드를 할 수 있습니다.</p>\\n<p>타입이 지저분하고 any가 많은데 어쩔수가 없습니다.</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token comment\\">// functions.ts</span>\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">wrapCsvValue</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>\\n  val<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span>\\n  formatFn<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span>arg0<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">,</span> arg1<span class=\\"token operator\\">:</span> RowData <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token builtin\\">string</span> <span class=\\"token operator\\">|</span> <span class=\\"token keyword\\">undefined</span><span class=\\"token punctuation\\">,</span>\\n  row<span class=\\"token operator\\">?</span><span class=\\"token operator\\">:</span> RowData\\n<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">let</span> formatted <span class=\\"token operator\\">=</span> formatFn <span class=\\"token operator\\">?</span> <span class=\\"token function\\">formatFn</span><span class=\\"token punctuation\\">(</span>val<span class=\\"token punctuation\\">,</span> row<span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">:</span> val<span class=\\"token punctuation\\">;</span>\\n\\n  formatted <span class=\\"token operator\\">=</span>\\n    formatted <span class=\\"token operator\\">===</span> <span class=\\"token keyword\\">undefined</span> <span class=\\"token operator\\">||</span> formatted <span class=\\"token operator\\">===</span> <span class=\\"token keyword\\">null</span> <span class=\\"token operator\\">?</span> <span class=\\"token string\\">\\"\\"</span> <span class=\\"token operator\\">:</span> <span class=\\"token function\\">String</span><span class=\\"token punctuation\\">(</span>formatted<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n  formatted <span class=\\"token operator\\">=</span> formatted<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">split</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'\\"'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">'\\"\\"'</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token keyword\\">return</span> <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">\`</span><span class=\\"token string\\">\\"</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">\${</span>formatted<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">\\"</span><span class=\\"token template-punctuation string\\">\`</span></span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">export</span> <span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">exportData</span> <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">(</span>columns<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">,</span> rows<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> content <span class=\\"token operator\\">=</span> <span class=\\"token punctuation\\">[</span>\\n    columns<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>col<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> label<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token function\\">wrapCsvValue</span><span class=\\"token punctuation\\">(</span>col<span class=\\"token punctuation\\">.</span>label<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n  <span class=\\"token punctuation\\">]</span>\\n    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">concat</span><span class=\\"token punctuation\\">(</span>\\n      rows<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>row<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">{</span> <span class=\\"token punctuation\\">[</span>x<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">]</span><span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span> <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span>\\n        columns\\n          <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">map</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span>col<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">any</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n            <span class=\\"token keyword\\">const</span> value <span class=\\"token operator\\">=</span>\\n              <span class=\\"token keyword\\">typeof</span> col<span class=\\"token punctuation\\">.</span>field <span class=\\"token operator\\">===</span> <span class=\\"token string\\">\\"function\\"</span>\\n                <span class=\\"token operator\\">?</span> col<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">field</span><span class=\\"token punctuation\\">(</span>row<span class=\\"token punctuation\\">)</span>\\n                <span class=\\"token operator\\">:</span> row<span class=\\"token punctuation\\">[</span>col<span class=\\"token punctuation\\">.</span>field <span class=\\"token operator\\">===</span> <span class=\\"token keyword\\">void</span> <span class=\\"token number\\">0</span> <span class=\\"token operator\\">?</span> col<span class=\\"token punctuation\\">.</span>name <span class=\\"token operator\\">:</span> col<span class=\\"token punctuation\\">.</span>field<span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n\\n            <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>value <span class=\\"token keyword\\">instanceof</span> <span class=\\"token class-name\\">Date</span> <span class=\\"token operator\\">||</span> dayjs<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">isDayjs</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n              <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">wrapCsvValue</span><span class=\\"token punctuation\\">(</span>\\n                <span class=\\"token function\\">dayjs</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">.</span><span class=\\"token function\\">format</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"YYYY.MM.DD HH:mm\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">,</span>\\n                col<span class=\\"token punctuation\\">.</span>format<span class=\\"token punctuation\\">,</span>\\n                row\\n              <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n            <span class=\\"token punctuation\\">}</span>\\n\\n            <span class=\\"token keyword\\">return</span> <span class=\\"token function\\">wrapCsvValue</span><span class=\\"token punctuation\\">(</span>value<span class=\\"token punctuation\\">,</span> col<span class=\\"token punctuation\\">.</span>format<span class=\\"token punctuation\\">,</span> row<span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n          <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n          <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\",\\"</span><span class=\\"token punctuation\\">)</span>\\n      <span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">)</span>\\n    <span class=\\"token punctuation\\">.</span><span class=\\"token function\\">join</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"\\\\r\\\\n\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token keyword\\">const</span> bom <span class=\\"token operator\\">=</span> <span class=\\"token string\\">\\"\\\\uFEFF\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token keyword\\">const</span> status <span class=\\"token operator\\">=</span> <span class=\\"token function\\">exportFile</span><span class=\\"token punctuation\\">(</span><span class=\\"token string\\">\\"table-export.csv\\"</span><span class=\\"token punctuation\\">,</span> bom <span class=\\"token operator\\">+</span> content<span class=\\"token punctuation\\">,</span> <span class=\\"token string\\">\\"text/csv\\"</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token keyword\\">if</span> <span class=\\"token punctuation\\">(</span>status <span class=\\"token operator\\">!==</span> <span class=\\"token boolean\\">true</span><span class=\\"token punctuation\\">)</span> <span class=\\"token punctuation\\">{</span>\\n    <span class=\\"token function\\">commonNotify</span><span class=\\"token punctuation\\">(</span>\\n      <span class=\\"token punctuation\\">{</span>\\n        message<span class=\\"token operator\\">:</span> <span class=\\"token string\\">\\"Browser denied file download...\\"</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n      <span class=\\"token string\\">\\"negative\\"</span>\\n    <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  <span class=\\"token punctuation\\">}</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div>","autoDesc":true}`);export{n as data};
