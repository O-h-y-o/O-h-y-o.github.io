const n=JSON.parse('{"key":"v-45ea11bc","path":"/posts/upbit/upbit-trade.html","title":"Creating an exchange page with Upbit Open API - Transaction Status","lang":"en-US","frontmatter":{"order":4,"description":"Creating an exchange page with Upbit Open API - Transaction Status Create a new UpbitTrade.vue file. Like last time, let\'s call the Trade API first. Let\'s import 20 pieces of data. Codes // socket-upbit.ts state: () ISocketState =&gt; ({ ... reloadTrade: async () =&gt; {}, }) // global.d.ts interface ISocketState { ... reloadTrade: Function; } interface ITradeResponse { change_price: number; sequential_id: number; prev_closing_price: number; timestamp: number; trade_price: number; trade_volume: number; ask_bid: string; market: string; trade_date_utc: string; trade_time_utc: string; } // UpbitTrade.vue &lt;script setup lang=\\"ts\\"&gt; import axios from \\"axios\\"; import { onMounted } from \\"vue\\"; import { useUpbitSocketStore } from \\"src/stores/socket-upbit\\"; const upbit = useUpbitSocketStore(); const getTradeAPI = async () =&gt; { const res = await axios.get( `https://api.upbit.com/v1/trades/ticks?market=${upbit.selectCoin}&amp;count=20` ); const data = res.data as ITradeResponse[]; }; onMounted(() =&gt; { getTradeAPI(); upbit.reloadTrade = getTradeAPI; }); &lt;/script&gt; API Response 예시 {{ showData }}","head":[["link",{"rel":"alternate","hreflang":"ko-kr","href":"https://o-h-y-o.github.io/ko/posts/upbit/upbit-trade.html"}],["meta",{"property":"og:url","content":"https://o-h-y-o.github.io/posts/upbit/upbit-trade.html"}],["meta",{"property":"og:site_name","content":"Delicious Jelly"}],["meta",{"property":"og:title","content":"Creating an exchange page with Upbit Open API - Transaction Status"}],["meta",{"property":"og:description","content":"Creating an exchange page with Upbit Open API - Transaction Status Create a new UpbitTrade.vue file. Like last time, let\'s call the Trade API first. Let\'s import 20 pieces of data. Codes // socket-upbit.ts state: () ISocketState =&gt; ({ ... reloadTrade: async () =&gt; {}, }) // global.d.ts interface ISocketState { ... reloadTrade: Function; } interface ITradeResponse { change_price: number; sequential_id: number; prev_closing_price: number; timestamp: number; trade_price: number; trade_volume: number; ask_bid: string; market: string; trade_date_utc: string; trade_time_utc: string; } // UpbitTrade.vue &lt;script setup lang=\\"ts\\"&gt; import axios from \\"axios\\"; import { onMounted } from \\"vue\\"; import { useUpbitSocketStore } from \\"src/stores/socket-upbit\\"; const upbit = useUpbitSocketStore(); const getTradeAPI = async () =&gt; { const res = await axios.get( `https://api.upbit.com/v1/trades/ticks?market=${upbit.selectCoin}&amp;count=20` ); const data = res.data as ITradeResponse[]; }; onMounted(() =&gt; { getTradeAPI(); upbit.reloadTrade = getTradeAPI; }); &lt;/script&gt; API Response 예시 {{ showData }}"}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:locale:alternate","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2023-06-27T12:09:32.000Z"}],["meta",{"property":"article:author","content":"O-h-y-o"}],["meta",{"property":"article:modified_time","content":"2023-06-27T12:09:32.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Creating an exchange page with Upbit Open API - Transaction Status\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2023-06-27T12:09:32.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"O-h-y-o\\",\\"url\\":\\"https://github.com/O-h-y-o\\"}]}"]]},"headers":[],"git":{"createdTime":1687553203000,"updatedTime":1687867772000,"contributors":[{"name":"ohyo","email":"khr157929@gmail.com","commits":4}]},"readingTime":{"minutes":3.86,"words":1159},"filePathRelative":"posts/upbit/upbit-trade.md","localizedDate":"June 23, 2023","excerpt":"<h1> Creating an exchange page with Upbit Open API - Transaction Status</h1>\\n<p>Create a new UpbitTrade.vue file.</p>\\n<p>Like last time, let\'s call the Trade API first.</p>\\n<p>Let\'s import 20 pieces of data.</p>\\n<div class=\\"hint-container info\\">\\n<p class=\\"hint-container-title\\">Codes</p>\\n<div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token comment\\">// socket-upbit.ts</span>\\nstate<span class=\\"token operator\\">:</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> ISocketState <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token operator\\">...</span>\\n  <span class=\\"token function-variable function\\">reloadTrade</span><span class=\\"token operator\\">:</span> <span class=\\"token keyword\\">async</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span><span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">,</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><div class=\\"language-typescript line-numbers-mode\\" data-ext=\\"ts\\"><pre class=\\"language-typescript\\"><code><span class=\\"token comment\\">// global.d.ts</span>\\n<span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">ISocketState</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token operator\\">...</span>\\n  reloadTrade<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">Function</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n\\n<span class=\\"token keyword\\">interface</span> <span class=\\"token class-name\\">ITradeResponse</span> <span class=\\"token punctuation\\">{</span>\\n  change_price<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">;</span>\\n  sequential_id<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">;</span>\\n  prev_closing_price<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">;</span>\\n  timestamp<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">;</span>\\n  trade_price<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">;</span>\\n  trade_volume<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">number</span><span class=\\"token punctuation\\">;</span>\\n  ask_bid<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">;</span>\\n  market<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">;</span>\\n  trade_date_utc<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">;</span>\\n  trade_time_utc<span class=\\"token operator\\">:</span> <span class=\\"token builtin\\">string</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><div class=\\"language-vue line-numbers-mode\\" data-ext=\\"vue\\"><pre class=\\"language-vue\\"><code>// UpbitTrade.vue\\n\\n<span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;</span>script</span> <span class=\\"token attr-name\\">setup</span> <span class=\\"token attr-name\\">lang</span><span class=\\"token attr-value\\"><span class=\\"token punctuation attr-equals\\">=</span><span class=\\"token punctuation\\">\\"</span>ts<span class=\\"token punctuation\\">\\"</span></span><span class=\\"token punctuation\\">&gt;</span></span><span class=\\"token script\\"><span class=\\"token language-javascript\\">\\n<span class=\\"token keyword\\">import</span> axios <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"axios\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> onMounted <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"vue\\"</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token keyword\\">import</span> <span class=\\"token punctuation\\">{</span> useUpbitSocketStore <span class=\\"token punctuation\\">}</span> <span class=\\"token keyword\\">from</span> <span class=\\"token string\\">\\"src/stores/socket-upbit\\"</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">const</span> upbit <span class=\\"token operator\\">=</span> <span class=\\"token function\\">useUpbitSocketStore</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token keyword\\">const</span> <span class=\\"token function-variable function\\">getTradeAPI</span> <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">async</span> <span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token keyword\\">const</span> res <span class=\\"token operator\\">=</span> <span class=\\"token keyword\\">await</span> axios<span class=\\"token punctuation\\">.</span><span class=\\"token function\\">get</span><span class=\\"token punctuation\\">(</span>\\n    <span class=\\"token template-string\\"><span class=\\"token template-punctuation string\\">`</span><span class=\\"token string\\">https://api.upbit.com/v1/trades/ticks?market=</span><span class=\\"token interpolation\\"><span class=\\"token interpolation-punctuation punctuation\\">${</span>upbit<span class=\\"token punctuation\\">.</span>selectCoin<span class=\\"token interpolation-punctuation punctuation\\">}</span></span><span class=\\"token string\\">&amp;count=20</span><span class=\\"token template-punctuation string\\">`</span></span>\\n  <span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n\\n  <span class=\\"token keyword\\">const</span> data <span class=\\"token operator\\">=</span> res<span class=\\"token punctuation\\">.</span>data <span class=\\"token keyword\\">as</span> ITradeResponse<span class=\\"token punctuation\\">[</span><span class=\\"token punctuation\\">]</span><span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">;</span>\\n\\n<span class=\\"token function\\">onMounted</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span> <span class=\\"token operator\\">=&gt;</span> <span class=\\"token punctuation\\">{</span>\\n  <span class=\\"token function\\">getTradeAPI</span><span class=\\"token punctuation\\">(</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n  upbit<span class=\\"token punctuation\\">.</span>reloadTrade <span class=\\"token operator\\">=</span> getTradeAPI<span class=\\"token punctuation\\">;</span>\\n<span class=\\"token punctuation\\">}</span><span class=\\"token punctuation\\">)</span><span class=\\"token punctuation\\">;</span>\\n</span></span><span class=\\"token tag\\"><span class=\\"token tag\\"><span class=\\"token punctuation\\">&lt;/</span>script</span><span class=\\"token punctuation\\">&gt;</span></span>\\n</code></pre><div class=\\"line-numbers\\" aria-hidden=\\"true\\"><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div><div class=\\"line-number\\"></div></div></div><p><code>API Response 예시</code></p>\\n<p>{{ showData }}</p>\\n</div>","autoDesc":true}');export{n as data};
