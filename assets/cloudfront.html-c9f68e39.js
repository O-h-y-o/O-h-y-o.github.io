import{_ as l}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as i,c,a as o,b as e,e as n,f as a}from"./app-30e71e31.js";const s={},d=a('<h1 id="cloudfront로-https-사용하기" tabindex="-1"><a class="header-anchor" href="#cloudfront로-https-사용하기" aria-hidden="true">#</a> Cloudfront로 HTTPS 사용하기</h1><h2 id="먼저-aws-certificate-manager-acm-에서-ssl-인증서를-발급받겠습니다" tabindex="-1"><a class="header-anchor" href="#먼저-aws-certificate-manager-acm-에서-ssl-인증서를-발급받겠습니다" aria-hidden="true">#</a> 먼저 AWS Certificate Manager(ACM) 에서 SSL 인증서를 발급받겠습니다.</h2><ol><li><a href="https://ap-northeast-2.console.aws.amazon.com/acm/home?region=ap-northeast-2#/welcome" target="_blank"> AWS Certificate Manager(ACM)</a> 에 들어갑니다.</li><li>인증서 요청을 누르고 퍼블릭 인증서 요청을 선택합니다.</li><li>도메인 이름(구매한 도메인)을 입력하고 맨 밑에 요청 버튼을 눌러줍니다.</li></ol><h2 id="이제-cloudfront-설정을-해주겠습니다" tabindex="-1"><a class="header-anchor" href="#이제-cloudfront-설정을-해주겠습니다" aria-hidden="true">#</a> 이제 CloudFront 설정을 해주겠습니다.</h2>',4),h=a('<li><a href="https://us-east-1.console.aws.amazon.com/cloudfront/v3/home?region=ap-northeast-2#/welcome" target="_blank"> CloudFront </a> 에서 CloutFront 배포 생성 버튼을 눌러줍니다.</li><li>원본 도메인 선택을 해주고 웹 사이트 엔드포인트 사용을 눌러줍니다.</li><li>프로토콜은 HTTP만 해당 을 선택하고, 이름 에는 <code>{{domain}}.s3-website.ap-northeast-2.amazonaws.com</code> 을 입력해줍니다. EC2서버나 S3는 HTTPS를 위한 작업이 필요하지 않습니다.</li><li>기본 캐시 동작에서 뷰어 프로토콜 정책 =&gt; <code>Redirect HTTP to HTTPS</code> 를 선택해줍니다.</li><li>웹 애플리케이션 방화벽을 선택해줍니다. 저같은 경우에는 활성화 를 선택하고, Use Monitor mode 도 선택해주었습니다.</li><li>설정 에서 가격 분류는 원하는 것을 선택해줍니다. 저같은 경우에는 <code>북미, 유럽, 아시아, 중동 및 아프리카에서 사용</code> 을 선택하였습니다.</li>',6),u={href:"http://domain.com",target:"_blank",rel:"noopener noreferrer"},_=o("li",null,[o("code",null,"사용자 정의 SSL 인증서"),e(" 는 ACM에서 발급받은 인증서를 선택해줍니다.")],-1),m=o("p",null,"CloudFront 설정은 끝났습니다.",-1),f=o("p",null,"이제 다시 Route53 으로 가서 CloudFront 를 대상으로 한 라우팅 레코드를 하나 더 추가해주겠습니다.",-1),p={href:"http://domain.com",target:"_blank",rel:"noopener noreferrer"},S=o("li",null,"Route53에서 레코트 생성을 눌러줍니다.",-1),C=o("li",null,[e("별칭 스위치를 on 해주고 트래픽 라우트 대상을 이번에는 "),o("code",null,"CloudFront 배포에 대한 별칭"),e(" 을 선택하겠습니다.")],-1),T=o("li",null,"배포 선택을 눌러 cloudfront 도메인 이름을 선택해주고 레코드를 생성해줍니다.",-1),b=o("div",{class:"hint-container tip"},[o("p",{class:"hint-container-title"},"팁"),o("p",null,[e("S3 => Route53 은 http 사용이고,"),o("br"),e(" S3 => Cloudfront => Route53 은 https 사용입니다.")]),o("p",null,[e("github actions에서 캐시 무효화를 시키는 코드입니다. S3 업로드 다음에 실행시키면 됩니다."),o("br"),o("code",null,'aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/*"')]),o("p",null,"AWS_DISTRIBUTION_ID는 Cloudfront ID 입니다.")],-1),g={href:"https://domain.com",target:"_blank",rel:"noopener noreferrer"};function I(k,w){const t=r("ExternalLinkIcon");return i(),c("div",null,[d,o("ol",null,[h,o("li",null,[e("대체 도메인 이름(CNAME) 항목 추가를 누르고 {"),o("a",u,[e("domain.com"),n(t)]),e("} 도메인을 입력해줍니다.")]),_]),m,f,o("ol",null,[o("li",null,[e("S3 => Route53 으로 "),o("a",p,[e("http://domain.com"),n(t)]),e(" 을 접속하게했던 레코드를 삭제해줍니다.")]),S,C,T]),b,o("p",null,[e("이제 "),o("a",g,[e("https://domain.com"),n(t)]),e(" 이 잘 들어가지는것을 확인해보면 됩니다.")])])}const R=l(s,[["render",I],["__file","cloudfront.html.vue"]]);export{R as default};
