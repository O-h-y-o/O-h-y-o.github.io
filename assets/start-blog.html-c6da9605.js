import{_ as r}from"./plugin-vue_export-helper-c27b6911.js";import{r as o,o as u,c as p,e as i,w as s,a as e,b as n,f as c}from"./app-b1b9e726.js";const v={},m=e("h1",{id:"blogging-with-vuepress-theme",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#blogging-with-vuepress-theme","aria-hidden":"true"},"#"),n(" Blogging with Vuepress Theme")],-1),h=e("p",null,"Let's create a development blog with the Vuepress Hope theme.",-1),b=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"pnpm"),n(" create vuepress-theme-hope "),e("span",{class:"token punctuation"},"["),n("dir"),e("span",{class:"token punctuation"},"]"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),g=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"yarn"),n(" create vuepress-theme-hope "),e("span",{class:"token punctuation"},"["),n("dir"),e("span",{class:"token punctuation"},"]"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),k=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"npm"),n(" init vuepress-theme-hope "),e("span",{class:"token punctuation"},"["),n("dir"),e("span",{class:"token punctuation"},"]"),n(`
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),_=c(`<ul><li>In [dir], you must put the name of the actual folder you want to create.</li></ul><div class="language-text line-numbers-mode" data-ext="text"><pre class="language-text"><code>language
package manager
Project Name
Project version
Project description
license
multiple languages
github workflow
type of project
initialize repo
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><ul><li>You have to make about 10 choices.</li></ul><br><br><p>When the project is created, go to the GitHub homepage and create a github public repo with the name <code>username.github.io</code>. Don&#39;t touch anything, just write the repo name and create it.</p><div class="hint-container info"><p class="hint-container-title">Edit Permissions</p><p>Create a repo, go to Settings tab =&gt; Actions =&gt; General, change the Workflow permissions option to <code>Read and write permissions</code> and click Save.</p></div><br><div class="hint-container warning"><p class="hint-container-title">deploy-docs.yml</p><p>vuepress hope provides a github actions template by default.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># deploy-docs.yml</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install pnpm
  <span class="token key atrule">uses</span><span class="token punctuation">:</span> pnpm/action<span class="token punctuation">-</span>setup@v2
  <span class="token key atrule">with</span><span class="token punctuation">:</span>
    <span class="token key atrule">run_install</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>There is something called <code>Install pnpm</code> in the middle, and you need to put the version as follows.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token comment"># deploy-docs.yml</span>
<span class="token punctuation">-</span> <span class="token key atrule">name</span><span class="token punctuation">:</span> Install pnpm
  <span class="token key atrule">uses</span><span class="token punctuation">:</span> pnpm/action<span class="token punctuation">-</span>setup@v2
  <span class="token key atrule">with</span><span class="token punctuation">:</span>
    <span class="token key atrule">version</span><span class="token punctuation">:</span> <span class="token number">8</span>
    <span class="token key atrule">run_install</span><span class="token punctuation">:</span> <span class="token boolean important">true</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div></div><p><br> <br></p>`,10),y={class:"hint-container note"},f=e("p",{class:"hint-container-title"},"Before uploading the source to Git, let's test the build.",-1),w=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"pnpm"),n(` run docs:build
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),x=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"yarn"),n(` docs:build
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),A=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[e("span",{class:"token function"},"npm"),n(` run docs:build
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),I={class:"hint-container tip"},$=e("p",{class:"hint-container-title"},"When 'useXXX() is called without provider' error occurs",-1),B=e("p",null,[n("An error occurs when there is a version of the library that is not compatible with vuepress."),e("br"),n(" vp-update will automatically set the version to a version compatible with vuepress.")],-1),j=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("$ "),e("span",{class:"token function"},"pnpm"),n(` dlx vp-update
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),T=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,[n("$ "),e("span",{class:"token function"},"yarn"),n(` dlx vp-update
`)])]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),V=e("div",{class:"language-bash line-numbers-mode","data-ext":"sh"},[e("pre",{class:"language-bash"},[e("code",null,`$ npx vp-update
`)]),e("div",{class:"line-numbers","aria-hidden":"true"},[e("div",{class:"line-number"})])],-1),C=c(`<br><p>If the build was successful, let&#39;s upload the source to the Git repository.</p><br><p>I will open a terminal in the project created with vuepress and upload the source by connecting to the git repository.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> init
$ <span class="token function">git</span> remote <span class="token function">add</span> origin <span class="token punctuation">[</span>url<span class="token punctuation">]</span>
$ <span class="token function">git</span> branch <span class="token parameter variable">-m</span> master main
$ <span class="token function">git</span> <span class="token function">add</span> <span class="token builtin class-name">.</span>
$ <span class="token function">git</span> commit <span class="token parameter variable">-m</span> <span class="token string">&quot;message&quot;</span>
$ <span class="token function">git</span> push
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><br><div class="hint-container tip"><p class="hint-container-title">Branch error</p><p>If you get a branch error in git push, please enter the following command.</p><div class="language-bash line-numbers-mode" data-ext="sh"><pre class="language-bash"><code>$ <span class="token function">git</span> push --set-upstream origin main
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div></div><br><p>If you have uploaded everything up to this point in the git repo, a new branch called gh-pages should have been created if you did not modify the .yml file separately during the build.</p><p>This time, I will go to Settings tab =&gt; Pages and change Branch to gh-pages in Build and deployment and Save.</p>`,10),G={href:"http://username.github.io",target:"_blank",rel:"noopener noreferrer"};function N(P,S){const l=o("CodeTabs"),d=o("ExternalLinkIcon");return u(),p("div",null,[m,h,i(l,{id:"6",data:[{id:"pnpm"},{id:"yarn"},{id:"npm"}],active:0,"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("pnpm")]),title1:s(({value:a,isActive:t})=>[n("yarn")]),title2:s(({value:a,isActive:t})=>[n("npm")]),tab0:s(({value:a,isActive:t})=>[b]),tab1:s(({value:a,isActive:t})=>[g]),tab2:s(({value:a,isActive:t})=>[k]),_:1}),_,e("div",y,[f,i(l,{id:"56",data:[{id:"pnpm"},{id:"yarn"},{id:"npm"}],active:0,"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("pnpm")]),title1:s(({value:a,isActive:t})=>[n("yarn")]),title2:s(({value:a,isActive:t})=>[n("npm")]),tab0:s(({value:a,isActive:t})=>[w]),tab1:s(({value:a,isActive:t})=>[x]),tab2:s(({value:a,isActive:t})=>[A]),_:1})]),e("div",I,[$,B,i(l,{id:"72",data:[{id:"pnpm"},{id:"yarn"},{id:"npm"}],active:0,"tab-id":"shell"},{title0:s(({value:a,isActive:t})=>[n("pnpm")]),title1:s(({value:a,isActive:t})=>[n("yarn")]),title2:s(({value:a,isActive:t})=>[n("npm")]),tab0:s(({value:a,isActive:t})=>[j]),tab1:s(({value:a,isActive:t})=>[T]),tab2:s(({value:a,isActive:t})=>[V]),_:1})]),C,e("p",null,[n("After waiting for a while, go to "),e("a",G,[n("username.github.io"),i(d)]),n(" and you will see a pretty home page. If it is not uploaded to the home page, please push it to the Git repository once more.")])])}const W=r(v,[["render",N],["__file","start-blog.html.vue"]]);export{W as default};
