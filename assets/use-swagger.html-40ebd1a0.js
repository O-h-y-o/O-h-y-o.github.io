import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{o as e,c as t,b as s,a as n,f as p}from"./app-8acebaf0.js";const o={},c=n("h1",{id:"자바-프로젝트에서-스웨거-사용하기",tabindex:"-1"},[n("a",{class:"header-anchor",href:"#자바-프로젝트에서-스웨거-사용하기","aria-hidden":"true"},"#"),s(" 자바 프로젝트에서 스웨거 사용하기")],-1),i=n("a",{href:"https://springdoc.org/#getting-started",target:"_blank"}," Spring Doc ",-1),l=p(`<p>build.gradle 에서 다음 문구를 추가해주세요.</p><div class="language-groovy line-numbers-mode" data-ext="groovy"><pre class="language-groovy"><code>dependencies <span class="token punctuation">{</span>
    implementation <span class="token string">&#39;org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0&#39;</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><div class="hint-container tip"><p class="hint-container-title">팁</p><p>implementation &#39;org.springdoc:springdoc-openapi-starter-webmvc-ui:2.1.0&#39;는 스프링 부트 애플리케이션에 Springdoc OpenAPI 라이브러리의 웹 MVC UI 기능을 추가하기 위한 의존성(dependency)을 선언하는 것입니다.</p><p>Springdoc OpenAPI는 스프링 프레임워크를 사용하여 OpenAPI 또는 Swagger 스펙으로 API 문서를 자동으로 생성하는 도구입니다. 이를 통해 API를 더 쉽게 문서화하고, API의 기능과 요청/응답을 쉽게 이해할 수 있도록 도와줍니다.</p><p>implementation은 Gradle 빌드 스크립트에서 사용되는 구성(configuration)의 하나입니다. 이것은 컴파일 및 런타임에 필요한 의존성을 선언할 때 사용되며, 프로젝트가 해당 라이브러리를 실제로 사용한다는 것을 의미합니다.</p><p>따라서 위의 구문은 프로젝트에 Springdoc OpenAPI 라이브러리의 웹 MVC UI 기능을 사용하기 위해 필요한 의존성을 추가하는 것입니다.</p></div><p>그리고 다시 프로젝트를 실행시키고 <code>http://localhost:8080/swagger-ui/index.html</code> 로 들어가서 스웨거 UI가 잘 나오는지 확인해주세요.</p><p><code>TestController.java</code></p><div class="language-java line-numbers-mode" data-ext="java"><pre class="language-java"><code><span class="token keyword">package</span> <span class="token namespace">org<span class="token punctuation">.</span>example<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span>

<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">GetMapping</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span></span><span class="token punctuation">;</span>
<span class="token keyword">import</span> <span class="token import"><span class="token namespace">io<span class="token punctuation">.</span>swagger<span class="token punctuation">.</span>v3<span class="token punctuation">.</span>oas<span class="token punctuation">.</span>annotations<span class="token punctuation">.</span></span><span class="token class-name">Operation</span></span><span class="token punctuation">;</span>

<span class="token annotation punctuation">@RestController</span>
<span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">TestController</span> <span class="token punctuation">{</span>
    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">&quot;/test&quot;</span><span class="token punctuation">)</span>
    <span class="token annotation punctuation">@Operation</span><span class="token punctuation">(</span>summary <span class="token operator">=</span> <span class="token string">&quot;Test API&quot;</span><span class="token punctuation">,</span> description <span class="token operator">=</span> <span class="token string">&quot;This API is a sample API.&quot;</span><span class="token punctuation">)</span>
    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">test</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
        <span class="token keyword">return</span> <span class="token string">&quot;Hello API!&quot;</span><span class="token punctuation">;</span>
    <span class="token punctuation">}</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>@Operation을 추가하여 API에 대한 설명을 추가할 수 있습니다.</p><h2 id="custom-path-사용하기" tabindex="-1"><a class="header-anchor" href="#custom-path-사용하기" aria-hidden="true">#</a> Custom path 사용하기</h2><p>src/main/resources 폴더에 <code>application.yml</code> 을 만들고 다음 문구를 넣어주세요.</p><div class="language-yaml line-numbers-mode" data-ext="yml"><pre class="language-yaml"><code><span class="token key atrule">springdoc</span><span class="token punctuation">:</span>
  <span class="token key atrule">swagger-ui</span><span class="token punctuation">:</span>
    <span class="token key atrule">path</span><span class="token punctuation">:</span> /custom<span class="token punctuation">-</span>path
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p><code>http://localhost:8080/custom-path</code> 로 접속이 잘 되면 성공입니다.</p>`,11);function u(r,d){return e(),t("div",null,[c,i,s("에서 자세한 내용을 확인할 수 있습니다. "),l])}const v=a(o,[["render",u],["__file","use-swagger.html.vue"]]);export{v as default};
