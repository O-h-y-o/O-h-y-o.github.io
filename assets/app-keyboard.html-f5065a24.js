import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-b1b9e726.js";const p={},e=t(`<h1 id="capacitor-웹뷰-키보드-제어" tabindex="-1"><a class="header-anchor" href="#capacitor-웹뷰-키보드-제어" aria-hidden="true">#</a> Capacitor 웹뷰 키보드 제어</h1><p>모바일 웹에서는 input focus 상태일때 키보드가 나타나게 됩니다.</p><p>android의 경우 키보드가 나타날때 자동으로 viewport가 조절이 되지만,</p><p>ios의 경우 키보드의 높이 만큼 viewport가 그대로 display 위로 올라가버리게 됩니다.</p><p>이에 따라 fixed top을 한 상단 네비게이션 바가 보이지 않게된다거나, footer영역이 위로 올라오게 되어버립니다.</p><p>이때 @capacitor/keyboard 플러그인을 이용하여 제어해줄 수 있습니다.</p><p>@capacitor/keyboard 플러그인을 설치 후 <code>npx cap sync</code> 를 해줍니다.</p><p>그리고 다음 코드를 넣으면 더 이상 viewport가 올라가지 않게됩니다.</p><div class="language-vue line-numbers-mode" data-ext="vue"><pre class="language-vue"><code><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>script</span> <span class="token attr-name">setup</span> <span class="token attr-name">lang</span><span class="token attr-value"><span class="token punctuation attr-equals">=</span><span class="token punctuation">&quot;</span>ts<span class="token punctuation">&quot;</span></span><span class="token punctuation">&gt;</span></span><span class="token script"><span class="token language-javascript">
<span class="token keyword">import</span> <span class="token punctuation">{</span> Keyboard<span class="token punctuation">,</span> KeyboardResize <span class="token punctuation">}</span> <span class="token keyword">from</span> <span class="token string">&quot;@capacitor/keyboard&quot;</span><span class="token punctuation">;</span>

Keyboard<span class="token punctuation">.</span><span class="token function">setResizeMode</span><span class="token punctuation">(</span><span class="token punctuation">{</span> <span class="token literal-property property">mode</span><span class="token operator">:</span> KeyboardResize<span class="token punctuation">.</span>None <span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>script</span><span class="token punctuation">&gt;</span></span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>viewport 처리는 요소마다 다르게 처리해주어야 합니다.</p><p>keyboard가 올라올때 height를 keyboard가 올라온 만큼 줄여주거나 원하는 영역만 다시 위로 올리는 방법이 있습니다.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code>Keyboard<span class="token punctuation">.</span><span class="token function">addListener</span><span class="token punctuation">(</span><span class="token string">&#39;keyboardWillShow&#39;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>info<span class="token operator">:</span> KeyboardInfo<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
    <span class="token builtin">console</span><span class="token punctuation">.</span><span class="token function">log</span><span class="token punctuation">(</span>info<span class="token punctuation">.</span>keyboardHeight<span class="token punctuation">)</span>
<span class="token punctuation">}</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>키보드가 보여질때 키보드의 크기를 가져오는 방법입니다. 이것으로 영역 제어를 해주어 자연스러운 동작을 만들어 줄 수 있습니다.</p><p>채팅의 경우 input이 하단에 있어 키보드가 올라오면 input 영역이 가려지게 됩니다. 채팅 input 영역을 우선 키보드 영역만큼 위로 올려주어야합니다.</p><p>그리고 보내기 버튼을 누르면, input의 focus가 해제되고 키보드가 내려가게됩니다. 계속 유지되어야 좋을텐데요.</p><p>계속 유지시켜주기 위해서는 다음 코드처럼 입력해주세요.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> sendBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.send-btn&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLElement<span class="token punctuation">;</span>

sendBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;touchstart&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sendBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;touchend&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">sendChatting</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>이렇게 되면 더 이상 focus가 풀리지 않고 키보드도 내려가지 않습니다.</p><p>하지만 e.preventDefault() 때문에 한글 입력이 끝나지 않은채로 그대로 남아 있을 수 있습니다.</p><p>그럴때엔 다음의 코드를 추가해주세요.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token keyword">const</span> sendBtn <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span><span class="token string">&quot;.send-btn&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLElement<span class="token punctuation">;</span>

sendBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;touchstart&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> chattingInput <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">querySelector</span><span class="token punctuation">(</span>
    <span class="token string">&quot;.chatting-input&quot;</span>
  <span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">;</span>

  <span class="token keyword">const</span> emptyInput <span class="token operator">=</span> document<span class="token punctuation">.</span><span class="token function">getElementById</span><span class="token punctuation">(</span><span class="token string">&quot;empty-input&quot;</span><span class="token punctuation">)</span> <span class="token keyword">as</span> HTMLInputElement<span class="token punctuation">;</span>

  emptyInput<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  chattingInput<span class="token punctuation">.</span><span class="token function">focus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  e<span class="token punctuation">.</span><span class="token function">preventDefault</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

sendBtn<span class="token punctuation">.</span><span class="token function">addEventListener</span><span class="token punctuation">(</span><span class="token string">&quot;touchend&quot;</span><span class="token punctuation">,</span> <span class="token punctuation">(</span>e<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token function">sendChatting</span><span class="token punctuation">(</span>e<span class="token punctuation">)</span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">)</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>화면에 보이지 않는 input을 하나 만들어주고, z-index 는 -1로 해주세요. focus가 가능한 상태여야 합니다.</p><p>input의 포커스를 변경하여 입력상태를 멈추어 초기화 시켜주었습니다.</p>`,23),o=[e];function c(u,i){return s(),a("div",null,o)}const r=n(p,[["render",c],["__file","app-keyboard.html.vue"]]);export{r as default};
