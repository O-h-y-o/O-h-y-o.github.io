import{_ as a}from"./plugin-vue_export-helper-c27b6911.js";import{r,o as l,c as s,a as e,b as t,e as n,f as i}from"./app-9b41661d.js";const c={},d=i('<h1 id="using-https-with-cloudfront" tabindex="-1"><a class="header-anchor" href="#using-https-with-cloudfront" aria-hidden="true">#</a> Using HTTPS with Cloudfront</h1><h2 id="first-we-will-issue-an-ssl-certificate-from-aws-certificate-manager-acm" tabindex="-1"><a class="header-anchor" href="#first-we-will-issue-an-ssl-certificate-from-aws-certificate-manager-acm" aria-hidden="true">#</a> First, we will issue an SSL certificate from AWS Certificate Manager (ACM).</h2><ol><li>Go into <a href="https://ap-northeast-2.console.aws.amazon.com/acm/home?region=ap-northeast-2#/welcome" target="_blank"> AWS Certificate Manager (ACM)</a>.</li><li>Click Request Certificate and select Request Public Certificate.</li><li>Enter the domain name (purchased domain) and click the Request button at the bottom.</li></ol><h2 id="now-let-s-set-up-cloudfront" tabindex="-1"><a class="header-anchor" href="#now-let-s-set-up-cloudfront" aria-hidden="true">#</a> Now let&#39;s set up CloudFront.</h2>',4),h=i('<li><a href="https://us-east-1.console.aws.amazon.com/cloudfront/v3/home?region=ap-northeast-2#/welcome" target="_blank">CloudFront </a> Click the Create CloutFront distribution button.</li><li>Select the source domain and click Use website endpoint.</li><li>Select HTTP only for Protocol and enter <code>{{domain}}.s3-website.ap-northeast-2.amazonaws.com</code> for Name. No EC2 server or S3 work required for HTTPS.</li><li>Select Viewer Protocol Policy =&gt; <code>Redirect HTTP to HTTPS</code> in Default Cache Behavior.</li><li>Select Web Application Firewall. In my case, I selected Enable and also selected Use Monitor mode.</li><li>In Settings, select the price category you want. In my case, I selected &#39;Used in North America, Europe, Asia, Middle East and Africa&#39;.</li>',6),u={href:"http://domain.com",target:"_blank",rel:"noopener noreferrer"},f=e("li",null,"For 'Custom SSL Certificate', select the certificate issued by ACM.",-1),m=e("p",null,"CloudFront setup is finished.",-1),_=e("p",null,"Now let's go back to Route53 and add another routing record for CloudFront.",-1),p={href:"http://domain.com",target:"_blank",rel:"noopener noreferrer"},w=e("li",null,"Click Create Record in Route53.",-1),C=e("li",null,"Turn on the alias switch and select 'Alias ​​for CloudFront distribution' as the traffic route destination.",-1),b=e("li",null,"Click Select Distribution to select a cloudfront domain name and create a record.",-1),S=e("p",null,"::: tips",-1),g=e("p",null,[t("S3 => Route53 is using http,"),e("br"),t(" S3 => Cloudfront => Route53 is https use.")],-1),k=e("p",null,[t("This is the code to invalidate the cache in github actions. Just run it after the S3 upload."),e("br"),e("code",null,'aws cloudfront create-invalidation --distribution-id ${{ secrets.AWS_DISTRIBUTION_ID }} --paths "/*"')],-1),T=e("p",null,"AWS_DISTRIBUTION_ID is your Cloudfront ID.",-1),I=e("p",null,":::",-1),A={href:"https://domain.com",target:"_blank",rel:"noopener noreferrer"};function N(R,y){const o=r("ExternalLinkIcon");return l(),s("div",null,[d,e("ol",null,[h,e("li",null,[t("Click Add Alternate Domain Name (CNAME) entry and enter the {"),e("a",u,[t("domain.com"),n(o)]),t("} domain.")]),f]),m,_,e("ol",null,[e("li",null,[t("S3 => Delete the record that allowed "),e("a",p,[t("http://domain.com"),n(o)]),t(" to be accessed by Route53.")]),w,C,b]),S,g,k,T,I,e("p",null,[t("Now you can check that "),e("a",A,[t("https://domain.com"),n(o)]),t(" is entering well.")])])}const E=a(c,[["render",N],["__file","cloudfront.html.vue"]]);export{E as default};
