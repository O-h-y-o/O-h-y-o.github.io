const e=JSON.parse('{"key":"v-0b1d9568","path":"/ko/posts/info/service-worker-update.html","title":"서비스워커 업데이트","lang":"ko-KR","frontmatter":{"description":"서비스워커 업데이트 서비스워커를 이용하는 웹페이지에서, 서비스를 업데이트 하였을때 새로고침을 하더라도 바로 업데이트 사항을 반영받지 못할 수 있습니다. 퀘이사 홈페이지나 흔히 사용하는 노션같은 곳에서 업데이트 된 내용이 있으니 새로고침을 하라는 문구를 흔히 볼 수 있습니다. 해당 기능을 구현하려면 여러가지 방법이 있습니다. 그 중 하나의 방법을 적겠습니다. 현재 버전을 저장할 데이터베이스를 만들어줍니다. 버전을 수정하는 API를 만들어 버전관리를 할 수 있으면 더 편리합니다. 수동으로 데이터를 수정하여도 됩니다. 버전을 체크하는 API를 만듭니다. (소켓으로도 가능합니다.) 클라이언트에서 setInterval으로 서버에 버전 체크 API를 호출합니다. Web Storage에 버전 정보를 저장해두고, 계속하여 서버에서 주는 값과 비교를 해줍니다. 최초에는 단순 저장만 하며, 이후에 버전이 일치하지 않다면 사용자에게 새로고침을 권유합니다.","head":[["meta",{"property":"og:url","content":"https://o-h-y-o.github.io/ko/posts/info/service-worker-update.html"}],["meta",{"property":"og:site_name","content":"Delicious Jelly"}],["meta",{"property":"og:title","content":"서비스워커 업데이트"}],["meta",{"property":"og:description","content":"서비스워커 업데이트 서비스워커를 이용하는 웹페이지에서, 서비스를 업데이트 하였을때 새로고침을 하더라도 바로 업데이트 사항을 반영받지 못할 수 있습니다. 퀘이사 홈페이지나 흔히 사용하는 노션같은 곳에서 업데이트 된 내용이 있으니 새로고침을 하라는 문구를 흔히 볼 수 있습니다. 해당 기능을 구현하려면 여러가지 방법이 있습니다. 그 중 하나의 방법을 적겠습니다. 현재 버전을 저장할 데이터베이스를 만들어줍니다. 버전을 수정하는 API를 만들어 버전관리를 할 수 있으면 더 편리합니다. 수동으로 데이터를 수정하여도 됩니다. 버전을 체크하는 API를 만듭니다. (소켓으로도 가능합니다.) 클라이언트에서 setInterval으로 서버에 버전 체크 API를 호출합니다. Web Storage에 버전 정보를 저장해두고, 계속하여 서버에서 주는 값과 비교를 해줍니다. 최초에는 단순 저장만 하며, 이후에 버전이 일치하지 않다면 사용자에게 새로고침을 권유합니다."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"ko-KR"}],["meta",{"property":"og:updated_time","content":"2024-01-03T01:49:57.000Z"}],["meta",{"property":"article:author","content":"O-h-y-o"}],["meta",{"property":"article:modified_time","content":"2024-01-03T01:49:57.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"서비스워커 업데이트\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-01-03T01:49:57.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"O-h-y-o\\",\\"url\\":\\"https://github.com/O-h-y-o\\"}]}"]]},"headers":[],"git":{"createdTime":1704246597000,"updatedTime":1704246597000,"contributors":[{"name":"Ohyo","email":"khr157929@gmail.com","commits":1}]},"readingTime":{"minutes":0.8,"words":239},"filePathRelative":"ko/posts/info/service-worker-update.md","localizedDate":"2024년 1월 3일","excerpt":"<h1> 서비스워커 업데이트</h1>\\n<p>서비스워커를 이용하는 웹페이지에서, 서비스를 업데이트 하였을때 새로고침을 하더라도 바로 업데이트 사항을 반영받지 못할 수 있습니다.</p>\\n<p>퀘이사 홈페이지나 흔히 사용하는 노션같은 곳에서 업데이트 된 내용이 있으니 새로고침을 하라는 문구를 흔히 볼 수 있습니다.</p>\\n<p>해당 기능을 구현하려면 여러가지 방법이 있습니다. 그 중 하나의 방법을 적겠습니다.</p>\\n<ol>\\n<li>\\n<p>현재 버전을 저장할 데이터베이스를 만들어줍니다.<br>\\n버전을 수정하는 API를 만들어 버전관리를 할 수 있으면 더 편리합니다. 수동으로 데이터를 수정하여도 됩니다.</p>\\n</li>\\n<li>\\n<p>버전을 체크하는 API를 만듭니다. (소켓으로도 가능합니다.)</p>\\n</li>\\n<li>\\n<p>클라이언트에서 setInterval으로 서버에 버전 체크 API를 호출합니다.<br>\\nWeb Storage에 버전 정보를 저장해두고, 계속하여 서버에서 주는 값과 비교를 해줍니다.<br>\\n최초에는 단순 저장만 하며, 이후에 버전이 일치하지 않다면 사용자에게 새로고침을 권유합니다.</p>\\n</li>\\n</ol>","autoDesc":true}');export{e as data};
