import{_ as n}from"./plugin-vue_export-helper-c27b6911.js";import{o as s,c as a,f as t}from"./app-829d1310.js";const p={},o=t(`<h1 id="quasar-에서-엑셀-다운로드-하기" tabindex="-1"><a class="header-anchor" href="#quasar-에서-엑셀-다운로드-하기" aria-hidden="true">#</a> Quasar 에서 엑셀 다운로드 하기</h1><p>코드 전체입니다.</p><p><code>exportData</code>로 엑셀 다운로드를 할 수 있습니다.</p><p>타입이 지저분하고 any가 많은데 어쩔수가 없습니다.</p><div class="language-typescript line-numbers-mode" data-ext="ts"><pre class="language-typescript"><code><span class="token comment">// functions.ts</span>
<span class="token keyword">const</span> <span class="token function-variable function">wrapCsvValue</span> <span class="token operator">=</span> <span class="token punctuation">(</span>
  val<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span>
  formatFn<span class="token operator">?</span><span class="token operator">:</span> <span class="token punctuation">(</span>arg0<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">,</span> arg1<span class="token operator">:</span> RowData <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token builtin">string</span> <span class="token operator">|</span> <span class="token keyword">undefined</span><span class="token punctuation">,</span>
  row<span class="token operator">?</span><span class="token operator">:</span> RowData
<span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">let</span> formatted <span class="token operator">=</span> formatFn <span class="token operator">?</span> <span class="token function">formatFn</span><span class="token punctuation">(</span>val<span class="token punctuation">,</span> row<span class="token punctuation">)</span> <span class="token operator">:</span> val<span class="token punctuation">;</span>

  formatted <span class="token operator">=</span>
    formatted <span class="token operator">===</span> <span class="token keyword">undefined</span> <span class="token operator">||</span> formatted <span class="token operator">===</span> <span class="token keyword">null</span> <span class="token operator">?</span> <span class="token string">&quot;&quot;</span> <span class="token operator">:</span> <span class="token function">String</span><span class="token punctuation">(</span>formatted<span class="token punctuation">)</span><span class="token punctuation">;</span>

  formatted <span class="token operator">=</span> formatted<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">&#39;&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&#39;&quot;&quot;&#39;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">return</span> <span class="token template-string"><span class="token template-punctuation string">\`</span><span class="token string">&quot;</span><span class="token interpolation"><span class="token interpolation-punctuation punctuation">\${</span>formatted<span class="token interpolation-punctuation punctuation">}</span></span><span class="token string">&quot;</span><span class="token template-punctuation string">\`</span></span><span class="token punctuation">;</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>

<span class="token keyword">export</span> <span class="token keyword">const</span> <span class="token function-variable function">exportData</span> <span class="token operator">=</span> <span class="token punctuation">(</span>columns<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">,</span> rows<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
  <span class="token keyword">const</span> content <span class="token operator">=</span> <span class="token punctuation">[</span>
    columns<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>col<span class="token operator">:</span> <span class="token punctuation">{</span> label<span class="token operator">:</span> <span class="token builtin">string</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token function">wrapCsvValue</span><span class="token punctuation">(</span>col<span class="token punctuation">.</span>label<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
  <span class="token punctuation">]</span>
    <span class="token punctuation">.</span><span class="token function">concat</span><span class="token punctuation">(</span>
      rows<span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>row<span class="token operator">:</span> <span class="token punctuation">{</span> <span class="token punctuation">[</span>x<span class="token operator">:</span> <span class="token builtin">string</span><span class="token punctuation">]</span><span class="token operator">:</span> <span class="token builtin">any</span> <span class="token punctuation">}</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span>
        columns
          <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span><span class="token punctuation">(</span>col<span class="token operator">:</span> <span class="token builtin">any</span><span class="token punctuation">)</span> <span class="token operator">=&gt;</span> <span class="token punctuation">{</span>
            <span class="token keyword">const</span> value <span class="token operator">=</span>
              <span class="token keyword">typeof</span> col<span class="token punctuation">.</span>field <span class="token operator">===</span> <span class="token string">&quot;function&quot;</span>
                <span class="token operator">?</span> col<span class="token punctuation">.</span><span class="token function">field</span><span class="token punctuation">(</span>row<span class="token punctuation">)</span>
                <span class="token operator">:</span> row<span class="token punctuation">[</span>col<span class="token punctuation">.</span>field <span class="token operator">===</span> <span class="token keyword">void</span> <span class="token number">0</span> <span class="token operator">?</span> col<span class="token punctuation">.</span>name <span class="token operator">:</span> col<span class="token punctuation">.</span>field<span class="token punctuation">]</span><span class="token punctuation">;</span>

            <span class="token keyword">if</span> <span class="token punctuation">(</span>value <span class="token keyword">instanceof</span> <span class="token class-name">Date</span> <span class="token operator">||</span> dayjs<span class="token punctuation">.</span><span class="token function">isDayjs</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
              <span class="token keyword">return</span> <span class="token function">wrapCsvValue</span><span class="token punctuation">(</span>
                <span class="token function">dayjs</span><span class="token punctuation">(</span>value<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">format</span><span class="token punctuation">(</span><span class="token string">&quot;YYYY.MM.DD HH:mm&quot;</span><span class="token punctuation">)</span><span class="token punctuation">,</span>
                col<span class="token punctuation">.</span>format<span class="token punctuation">,</span>
                row
              <span class="token punctuation">)</span><span class="token punctuation">;</span>
            <span class="token punctuation">}</span>

            <span class="token keyword">return</span> <span class="token function">wrapCsvValue</span><span class="token punctuation">(</span>value<span class="token punctuation">,</span> col<span class="token punctuation">.</span>format<span class="token punctuation">,</span> row<span class="token punctuation">)</span><span class="token punctuation">;</span>
          <span class="token punctuation">}</span><span class="token punctuation">)</span>
          <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;,&quot;</span><span class="token punctuation">)</span>
      <span class="token punctuation">)</span>
    <span class="token punctuation">)</span>
    <span class="token punctuation">.</span><span class="token function">join</span><span class="token punctuation">(</span><span class="token string">&quot;\\r\\n&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> bom <span class="token operator">=</span> <span class="token string">&quot;\\uFEFF&quot;</span><span class="token punctuation">;</span>

  <span class="token keyword">const</span> status <span class="token operator">=</span> <span class="token function">exportFile</span><span class="token punctuation">(</span><span class="token string">&quot;table-export.csv&quot;</span><span class="token punctuation">,</span> bom <span class="token operator">+</span> content<span class="token punctuation">,</span> <span class="token string">&quot;text/csv&quot;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>

  <span class="token keyword">if</span> <span class="token punctuation">(</span>status <span class="token operator">!==</span> <span class="token boolean">true</span><span class="token punctuation">)</span> <span class="token punctuation">{</span>
    <span class="token function">commonNotify</span><span class="token punctuation">(</span>
      <span class="token punctuation">{</span>
        message<span class="token operator">:</span> <span class="token string">&quot;Browser denied file download...&quot;</span><span class="token punctuation">,</span>
      <span class="token punctuation">}</span><span class="token punctuation">,</span>
      <span class="token string">&quot;negative&quot;</span>
    <span class="token punctuation">)</span><span class="token punctuation">;</span>
  <span class="token punctuation">}</span>
<span class="token punctuation">}</span><span class="token punctuation">;</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div>`,5),e=[o];function c(l,i){return s(),a("div",null,e)}const k=n(p,[["render",c],["__file","export-csv.html.vue"]]);export{k as default};
